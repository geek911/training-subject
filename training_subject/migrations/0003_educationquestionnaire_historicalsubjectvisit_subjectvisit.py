# Generated by Django 3.2.4 on 2021-06-30 08:47

import _socket
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_revision.revision_field
import edc_base.model_fields.custom_fields
import edc_base.model_fields.hostname_modification_field
import edc_base.model_fields.userfield
import edc_base.model_fields.uuid_auto_field
import edc_base.model_validators.date
import edc_base.utils
import edc_protocol.validators
import simple_history.models
import training_subject.models.subject_visit


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('sites', '0002_alter_domain_unique'),
        ('edc_appointment', '0016_auto_20210629_1903'),
        ('training_subject', '0002_historicalsubjectconsent_subjectconsent'),
    ]

    operations = [
        migrations.CreateModel(
            name='SubjectVisit',
            fields=[
                ('created', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('modified', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('user_created', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60)),
                ('hostname_modified', edc_base.model_fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('device_created', models.CharField(blank=True, max_length=10)),
                ('device_modified', models.CharField(blank=True, max_length=10)),
                ('id', edc_base.model_fields.uuid_auto_field.UUIDAutoField(blank=True, editable=False, help_text='System auto field. UUID primary key.', primary_key=True, serialize=False)),
                ('subject_identifier', models.CharField(max_length=50, verbose_name='Subject Identifier')),
                ('visit_schedule_name', models.CharField(editable=False, help_text='the name of the visit schedule used to find the "schedule"', max_length=25)),
                ('schedule_name', models.CharField(editable=False, max_length=25)),
                ('visit_code', models.CharField(editable=False, max_length=25, null=True)),
                ('visit_code_sequence', models.IntegerField(blank=True, default=0, help_text='An integer to represent the sequence of additional appointments relative to the base appointment, 0, needed to complete data collection for the timepoint. (NNNN.0)', null=True, verbose_name='Sequence')),
                ('consent_model', models.CharField(editable=False, max_length=50, null=True)),
                ('consent_version', models.CharField(editable=False, max_length=10, null=True)),
                ('report_datetime', models.DateTimeField(default=edc_base.utils.get_utcnow, help_text='Date and time of this report', validators=[edc_protocol.validators.datetime_not_before_study_start, edc_base.model_validators.date.datetime_not_future], verbose_name='Visit Date and Time')),
                ('reason_unscheduled_other', edc_base.model_fields.custom_fields.OtherCharField(blank=True, max_length=25, null=True, verbose_name='If "Other" reason for unscheduled visit, specify')),
                ('reason_missed_other', edc_base.model_fields.custom_fields.OtherCharField(blank=True, max_length=25, null=True, verbose_name='If "Other" reason for missed visit, specify')),
                ('study_status', models.CharField(max_length=50, null=True, verbose_name="What is the participant's current study status")),
                ('require_crfs', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='Yes', max_length=10, verbose_name='Are scheduled data being submitted with this visit?')),
                ('info_source', models.CharField(max_length=25, verbose_name='What is the main source of this information?')),
                ('info_source_other', edc_base.model_fields.custom_fields.OtherCharField(blank=True, max_length=35, null=True, verbose_name='If "Other" source of information, specify')),
                ('survival_status', models.CharField(choices=[('alive', 'Alive'), ('dead', 'Deceased'), ('unknown', 'Unknown')], default='alive', max_length=10, null=True, verbose_name="Participant's survival status")),
                ('last_alive_date', models.DateField(blank=True, null=True, validators=[edc_protocol.validators.date_not_before_study_start, edc_base.model_validators.date.date_not_future], verbose_name='Date participant last known alive')),
                ('comments', models.TextField(blank=True, max_length=250, null=True, verbose_name='Comment if any additional pertinent information about the participant')),
                ('reason', models.TextField(verbose_name='What is the reason for this visit report?')),
                ('reason_missed', models.TextField(blank=True, null=True, verbose_name="If 'Did not attend scheduled visit' is detailed above, reason visit was not attended.")),
                ('reason_unscheduled', models.TextField(blank=True, null=True, verbose_name="If 'Unscheduled' above, provide reason for the unscheduled visit")),
                ('appointment', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='edc_appointment.appointment')),
                ('site', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, to='sites.site')),
            ],
            options={
                'ordering': ('subject_identifier', 'visit_schedule_name', 'schedule_name', 'visit_code', 'visit_code_sequence', 'report_datetime'),
                'abstract': False,
                'unique_together': {('subject_identifier', 'visit_schedule_name', 'schedule_name', 'report_datetime'), ('subject_identifier', 'visit_schedule_name', 'schedule_name', 'visit_code', 'visit_code_sequence')},
            },
            managers=[
                ('on_site', training_subject.models.subject_visit.CurrentSiteManager()),
            ],
        ),
        migrations.CreateModel(
            name='HistoricalSubjectVisit',
            fields=[
                ('created', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('modified', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('user_created', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60)),
                ('hostname_modified', edc_base.model_fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('device_created', models.CharField(blank=True, max_length=10)),
                ('device_modified', models.CharField(blank=True, max_length=10)),
                ('id', edc_base.model_fields.uuid_auto_field.UUIDAutoField(blank=True, db_index=True, editable=False, help_text='System auto field. UUID primary key.')),
                ('subject_identifier', models.CharField(max_length=50, verbose_name='Subject Identifier')),
                ('visit_schedule_name', models.CharField(editable=False, help_text='the name of the visit schedule used to find the "schedule"', max_length=25)),
                ('schedule_name', models.CharField(editable=False, max_length=25)),
                ('visit_code', models.CharField(editable=False, max_length=25, null=True)),
                ('visit_code_sequence', models.IntegerField(blank=True, default=0, help_text='An integer to represent the sequence of additional appointments relative to the base appointment, 0, needed to complete data collection for the timepoint. (NNNN.0)', null=True, verbose_name='Sequence')),
                ('consent_model', models.CharField(editable=False, max_length=50, null=True)),
                ('consent_version', models.CharField(editable=False, max_length=10, null=True)),
                ('report_datetime', models.DateTimeField(default=edc_base.utils.get_utcnow, help_text='Date and time of this report', validators=[edc_protocol.validators.datetime_not_before_study_start, edc_base.model_validators.date.datetime_not_future], verbose_name='Visit Date and Time')),
                ('reason_unscheduled_other', edc_base.model_fields.custom_fields.OtherCharField(blank=True, max_length=25, null=True, verbose_name='If "Other" reason for unscheduled visit, specify')),
                ('reason_missed_other', edc_base.model_fields.custom_fields.OtherCharField(blank=True, max_length=25, null=True, verbose_name='If "Other" reason for missed visit, specify')),
                ('study_status', models.CharField(max_length=50, null=True, verbose_name="What is the participant's current study status")),
                ('require_crfs', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], default='Yes', max_length=10, verbose_name='Are scheduled data being submitted with this visit?')),
                ('info_source', models.CharField(max_length=25, verbose_name='What is the main source of this information?')),
                ('info_source_other', edc_base.model_fields.custom_fields.OtherCharField(blank=True, max_length=35, null=True, verbose_name='If "Other" source of information, specify')),
                ('survival_status', models.CharField(choices=[('alive', 'Alive'), ('dead', 'Deceased'), ('unknown', 'Unknown')], default='alive', max_length=10, null=True, verbose_name="Participant's survival status")),
                ('last_alive_date', models.DateField(blank=True, null=True, validators=[edc_protocol.validators.date_not_before_study_start, edc_base.model_validators.date.date_not_future], verbose_name='Date participant last known alive')),
                ('comments', models.TextField(blank=True, max_length=250, null=True, verbose_name='Comment if any additional pertinent information about the participant')),
                ('reason', models.TextField(verbose_name='What is the reason for this visit report?')),
                ('reason_missed', models.TextField(blank=True, null=True, verbose_name="If 'Did not attend scheduled visit' is detailed above, reason visit was not attended.")),
                ('reason_unscheduled', models.TextField(blank=True, null=True, verbose_name="If 'Unscheduled' above, provide reason for the unscheduled visit")),
                ('history_date', models.DateTimeField()),
                ('history_change_reason', models.CharField(max_length=100, null=True)),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_id', edc_base.model_fields.uuid_auto_field.UUIDAutoField(primary_key=True, serialize=False)),
                ('appointment', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='edc_appointment.appointment')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('site', models.ForeignKey(blank=True, db_constraint=False, editable=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='sites.site')),
            ],
            options={
                'verbose_name': 'historical subject visit',
                'ordering': ('-history_date', '-history_id'),
                'get_latest_by': 'history_date',
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name='EducationQuestionnaire',
            fields=[
                ('created', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('modified', models.DateTimeField(blank=True, default=edc_base.utils.get_utcnow)),
                ('user_created', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user created')),
                ('user_modified', edc_base.model_fields.userfield.UserField(blank=True, help_text='Updated by admin.save_model', max_length=50, verbose_name='user modified')),
                ('hostname_created', models.CharField(blank=True, default=_socket.gethostname, help_text='System field. (modified on create only)', max_length=60)),
                ('hostname_modified', edc_base.model_fields.hostname_modification_field.HostnameModificationField(blank=True, help_text='System field. (modified on every save)', max_length=50)),
                ('revision', django_revision.revision_field.RevisionField(blank=True, editable=False, help_text='System field. Git repository tag:branch:commit.', max_length=75, null=True, verbose_name='Revision')),
                ('device_created', models.CharField(blank=True, max_length=10)),
                ('device_modified', models.CharField(blank=True, max_length=10)),
                ('id', edc_base.model_fields.uuid_auto_field.UUIDAutoField(blank=True, editable=False, help_text='System auto field. UUID primary key.', primary_key=True, serialize=False)),
                ('consent_model', models.CharField(editable=False, max_length=50, null=True)),
                ('consent_version', models.CharField(editable=False, max_length=10, null=True)),
                ('report_datetime', models.DateTimeField(default=edc_base.utils.get_utcnow, help_text="If reporting today, use today's date/time, otherwise use the date/time this information was reported.", validators=[edc_protocol.validators.datetime_not_before_study_start, edc_base.model_validators.date.datetime_not_future], verbose_name='Report Date')),
                ('working_status', models.CharField(choices=[('Yes', 'Yes'), ('No', 'No')], max_length=5, verbose_name='Are you currently working?')),
                ('type_of_work', models.CharField(choices=[('occasional_or_casual_employment', 'Occasional or casual employment'), ('seasonal_employment', 'Seasonal Employment'), ('formal_wage_employment_full_time', 'Formal wage employment (full-time)'), ('formal_wage_employment_part_time', 'Formal wage employment (part-time)'), ('self_employed_making_money_full_time', 'Self-employed making money (full time)'), ('self_employed_making_money_part_time', 'Self-employed making money (part time)'), ('self_employed_in_agriculture', 'Self employed in agriculture'), ('dont_want_to_answer', "Don't want to answer")], max_length=50, verbose_name='In you job what type of work do you do?')),
                ('previous_work', models.CharField(choices=[('farmer', 'Farmer'), ('farm_worker', 'Farm worker'), ('entertainer', 'Entertainer'), ('fishing', 'Fishing'), ('mining', 'Mining'), ('tourism_or_game_parks', 'Tourism / game parks'), ('working_in_shop_small_business', 'Working in shop or small business'), ('informal_selling', 'Informal Selling'), ('commercial_sex_work', 'Commercial sex work'), ('driver', 'Driver'), ('factory_worker', 'Factory worker'), ('guard', 'Guard'), ('police', 'Police'), ('clerical_and_office_work', 'Clerical and office work'), ('government_worker', 'Government worker'), ('teacher', 'Teacher'), ('health_care_worker', 'Health care worker'), ('other_professional', 'Other professional'), ('dont_want_to_answer', 'Dont want to answer'), ('other', 'Other')], max_length=50, verbose_name='Describe the work that you do or did in your most recent job. If you have more than one profession, choose the one you spend the most time doing.')),
                ('salary_range', models.CharField(choices=[('none', 'None'), ('1_199', 'BWP 1 - 199'), ('200_499', 'BWP 200 - 499'), ('500_999', 'BWP 500 - 999'), ('1000_4999', 'BWP 1000 - 4999'), ('5000 - 10000', 'BWP 5000 - 10000'), ('more_than_10000', 'More than BWP 10000'), ('dont_want_to_answer', "Don't want to answer"), ('other', 'Other')], max_length=50, verbose_name='In the past month, how much money did you earn from work you did or received in payment?')),
                ('site', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, to='sites.site')),
                ('subject_visit', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='training_subject.subjectvisit')),
            ],
            options={
                'verbose_name': 'Education Questionnaire',
            },
        ),
    ]
